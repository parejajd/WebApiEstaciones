// <auto-generated />
using AccesoADatos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccesoADatos.Migrations
{
    [DbContext(typeof(EstacionesDbContext))]
    [Migration("20231121014641_M1")]
    partial class M1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Modelos.Combustible", b =>
                {
                    b.Property<int>("CombustibleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CombustibleId"));

                    b.Property<double>("CostoGalon")
                        .HasColumnType("float");

                    b.Property<int>("EstacionDeServicioId")
                        .HasColumnType("int");

                    b.Property<string>("TipoCombustible")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CombustibleId");

                    b.HasIndex("EstacionDeServicioId");

                    b.ToTable("Combustible");
                });

            modelBuilder.Entity("Modelos.EstacionDeServicio", b =>
                {
                    b.Property<int>("EstacionDeServicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstacionDeServicioId"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstaAbierta")
                        .HasColumnType("bit");

                    b.HasKey("EstacionDeServicioId");

                    b.ToTable("EstacionDeServicio");
                });

            modelBuilder.Entity("Modelos.Combustible", b =>
                {
                    b.HasOne("Modelos.EstacionDeServicio", "EstacionDeServicio")
                        .WithMany("Combustibles")
                        .HasForeignKey("EstacionDeServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstacionDeServicio");
                });

            modelBuilder.Entity("Modelos.EstacionDeServicio", b =>
                {
                    b.Navigation("Combustibles");
                });
#pragma warning restore 612, 618
        }
    }
}
